let express,bodyParser,sqlite3,open;_2bd‍.w("express",[["default",["express"],function(v){express=v}]]);_2bd‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_2bd‍.w("sqlite3",[["default",["sqlite3"],function(v){sqlite3=v}]]);_2bd‍.w("sqlite",[["open",["open"],function(v){open=v}]]);
const app = express();







const dbPromise = open({
  filename: "db.sqlite3",
  driver: sqlite3.Database,
});

app.use(express.json());
// app.use(cors());

app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json());

app.post("/todos", async (req, res) => {
  const results = await db.createTodo(req.body);
  res.status(201).json({ results });
});

app.get("/todos", async (req, res) => {
  const db = await dbPromise;
  const todos = await db.all("SELECT * FROM todos");
  res.status(200).json({ todos });
});

app.get("/todos/done", async (req, res) => {
  const todos = await db.getDone();
  res.status(200).json({ todos });
});

app.get("/todos/active", async (req, res) => {
  const todos = await db.getActive();
  res.status(200).json({ todos });
});

app.delete("/todos/delete/:id", async (req, res) => {
  await db.deleteTodo(req.params.id);
  const todos = await db.getAllTodo();
  res.status(200).json({ todos });
});

app.patch("/todos/update/:id", async (req, res) => {
  const todo = await db.updateTodo(req.params.id, req.body);
  const todos = await db.getAllTodo();

  res.status(200).json({ todos });
});

const setup = async () => {
  const db = await dbPromise;
  await db.migrate();
  app.listen("1999", () => {
    console.log("Server started on port: 1999");
  });
};

setup();
